import unittest
import sys
sys.path.append("../../kgame_remastered")
from movement import Player


class TestMovement(unittest.TestCase):

    def test_move_up(self):
        self.assertTrue(self.player.move_up(self.board))
        self.assertEqual(self.board, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'p', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                      })

        self.assertTrue(self.player.move_up(self.board))
        self.assertEqual(self.board, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): 'p', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): ' ', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                      })

        self.assertFalse(self.player.move_up(self.board))
        self.assertEqual(self.board, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): 'p', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): ' ', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                      })

    def test_move_down(self):

        self.assertTrue(self.player.move_down(self.board))
        self.assertEqual(self.board, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): 'p', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                      })

        self.assertTrue(self.player.move_down(self.board))
        self.assertEqual(self.board, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'p', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                      })

        self.assertFalse(self.player.move_down(self.board))
        self.assertEqual(self.board, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'p', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                      })

    def test_move_left(self):
        self.assertTrue(self.player2.move_left(self.board2))
        self.assertEqual(self.board2, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): 'p', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                       })

        self.assertTrue(self.player2.move_left(self.board2))
        self.assertEqual(self.board2, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): 'p', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                       })

        self.assertFalse(self.player2.move_left(self.board2))
        self.assertEqual(self.board2, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): 'p', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                       })

    def test_move_right(self):
        self.assertTrue(self.player3.move_right(self.board3))
        self.assertEqual(self.board3, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): 'p', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                       })

        self.assertTrue(self.player3.move_right(self.board3))
        self.assertEqual(self.board3, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): 'p', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                       })

        self.assertFalse(self.player3.move_right(self.board3))
        self.assertEqual(self.board3, {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): 'p', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                                       })

    def test_collision(self):
        self.assertTrue(self.collision_test.collision(1, 1, 1, 2))
        self.assertTrue(self.collision_test.collision(2, 2, 2, 3))
        self.assertTrue(self.collision_test.collision(15, 9, 14, 9))

        self.assertFalse(self.collision_test.collision(0, 0, 1, 2))
        self.assertFalse(self.collision_test.collision(21, 3, 4, 5))
        self.assertFalse(self.collision_test.collision(6, 7, 3, 9))

        self.assertFalse(self.collision_test.collision(None, 7, 3, 9))
        self.assertFalse(self.collision_test.collision(None, None, 3, 9))
        self.assertFalse(self.collision_test.collision(None, None, None, 9))
        self.assertFalse(self.collision_test.collision(None, None, None, None))

    def setUp(self):

        self.board = {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                      }

        self.board2 = {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): 'k', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): ' ', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                      }

        self.board3 = {(0, 0): '#', (0, 1): '#', (0, 2): '#', (0, 3): '#', (0, 4): '#', (0, 5): '#', (0, 6): '#', (0, 7): '#', (0, 8): '#', (0, 9): '#', (0, 10): '#', (0, 11): '#', (0, 12): '#', (0, 13): '#', (0, 14): '#', (0, 15): '#', (0, 16): '#',
                      (1, 0): '#', (1, 16): '#', (2, 0): '#', (2, 16): '#', (3, 0): '#', (3, 16): '#', (4, 0): '#', (4, 16): '#', (5, 0): '#', (5, 16): '#', (6, 0): '#', (6, 16): '#', (7, 0): '#', (7, 16): '#', (8, 0): '#', (8, 16): '#',
                      (9, 0): '#', (9, 16): '#', (10, 0): '#', (10, 1): '#', (10, 2): '#', (10, 3): '#', (10, 4): '#', (10, 5): '#', (10, 6): '#', (10, 7): '#', (10, 8): '#', (10, 9): '#', (10, 10): '#', (10, 11): '#', (10, 12): '#', (10, 13): '#', (10, 14): '#', (10, 15): '#', (10, 16): '#',
                      (1, 1): ' ', (1, 2): ' ', (1, 3): ' ', (1, 4): ' ', (1, 5): ' ', (1, 6): ' ', (1, 7): ' ', (1, 8): ' ', (1, 9): ' ', (1, 10): ' ', (1, 11): ' ', (1, 12): ' ', (1, 13): 'k', (1, 14): ' ', (1, 15): ' ',
                      (2, 1): 'k', (2, 2): '#', (2, 3): '#', (2, 4): '#', (2, 5): '#', (2, 6): '#', (2, 7): ' ', (2, 8): '#', (2, 9): '#', (2, 10): '#', (2, 11): '#', (2, 12): '#', (2, 13): '#', (2, 14): '#', (2, 15): '#',
                      (3, 1): ' ', (3, 2): ' ', (3, 3): ' ', (3, 4): ' ', (3, 5): ' ', (3, 6): '#', (3, 7): ' ', (3, 8): ' ', (3, 9): ' ', (3, 10): '#', (3, 11): ' ', (3, 12): '#', (3, 13): ' ', (3, 14): ' ', (3, 15): 'k',
                      (4, 1): ' ', (4, 2): '#', (4, 3): ' ', (4, 4): '#', (4, 5): '#', (4, 6): '#', (4, 7): ' ', (4, 8): '#', (4, 9): '#', (4, 10): '#', (4, 11): ' ', (4, 12): '#', (4, 13): ' ', (4, 14): '#', (4, 15): '#',
                      (5, 1): 'k', (5, 2): '#', (5, 3): ' ', (5, 4): ' ', (5, 5): ' ', (5, 6): '#', (5, 7): 'k', (5, 8): ' ', (5, 9): ' ', (5, 10): ' ', (5, 11): ' ', (5, 12): 'k', (5, 13): 'k', (5, 14): ' ', (5, 15): ' ',
                      (6, 1): '#', (6, 2): '#', (6, 3): ' ', (6, 4): '#', (6, 5): '#', (6, 6): '#', (6, 7): ' ', (6, 8): '#', (6, 9): '#', (6, 10): '#', (6, 11): '#', (6, 12): '#', (6, 13): '#', (6, 14): '#', (6, 15): ' ',
                      (7, 1): ' ', (7, 2): '#', (7, 3): ' ', (7, 4): 'k', (7, 5): ' ', (7, 6): '#', (7, 7): ' ', (7, 8): '#', (7, 9): ' ', (7, 10): 'k', (7, 11): ' ', (7, 12): ' ', (7, 13): ' ', (7, 14): '#', (7, 15): ' ',
                      (8, 1): ' ', (8, 2): '#', (8, 3): ' ', (8, 4): '#', (8, 5): '#', (8, 6): '#', (8, 7): '#', (8, 8): '#', (8, 9): ' ', (8, 10): '#', (8, 11): '#', (8, 12): '#', (8, 13): '#', (8, 14): '#', (8, 15): 'k',
                      (9, 1): ' ', (9, 2): '#', (9, 3): ' ', (9, 4): ' ', (9, 5): ' ', (9, 6): ' ', (9, 7): ' ', (9, 8): ' ', (9, 9): ' ', (9, 10): ' ', (9, 11): ' ', (9, 12): ' ', (9, 13): ' ', (9, 14): '#', (9, 15): ' '
                      }

        self.player = Player(1, 3, self.board, "p")
        self.player2 = Player(5, 5, self.board2, "p")
        self.player3 = Player(3, 7, self.board3, "p")

        self.collision_test = self.player


if __name__ == '__main__':
    unittest.main()
